# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import common_pb2 as common__pb2
import ether_service_pb2 as ether__service__pb2


class ether_serviceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.rpc_get_ether_service = channel.unary_unary(
        '/ether_service/rpc_get_ether_service',
        request_serializer=ether__service__pb2.req_ether_service_key.SerializeToString,
        response_deserializer=ether__service__pb2.res_ether_service.FromString,
        )
    self.rpc_list_ether_services = channel.stream_stream(
        '/ether_service/rpc_list_ether_services',
        request_serializer=ether__service__pb2.req_ether_service_key.SerializeToString,
        response_deserializer=ether__service__pb2.res_ether_service.FromString,
        )
    self.rpc_register_ether_service = channel.unary_unary(
        '/ether_service/rpc_register_ether_service',
        request_serializer=ether__service__pb2.res_ether_service.SerializeToString,
        response_deserializer=ether__service__pb2.res_ether_service.FromString,
        )
    self.rpc_unregister_ether_service = channel.unary_unary(
        '/ether_service/rpc_unregister_ether_service',
        request_serializer=ether__service__pb2.req_ether_service_key.SerializeToString,
        response_deserializer=common__pb2.null.FromString,
        )
    self.rpc_taskflow_create_ether_service = channel.unary_unary(
        '/ether_service/rpc_taskflow_create_ether_service',
        request_serializer=ether__service__pb2.req_service_create_spec.SerializeToString,
        response_deserializer=common__pb2.null.FromString,
        )
    self.rpc_taskflow_delete_ether_service = channel.unary_unary(
        '/ether_service/rpc_taskflow_delete_ether_service',
        request_serializer=ether__service__pb2.req_ether_service_key.SerializeToString,
        response_deserializer=common__pb2.null.FromString,
        )
    self.rpc_push_ether_services = channel.stream_unary(
        '/ether_service/rpc_push_ether_services',
        request_serializer=ether__service__pb2.res_ether_service.SerializeToString,
        response_deserializer=common__pb2.null.FromString,
        )
    self.rpc_pull_ether_services = channel.unary_stream(
        '/ether_service/rpc_pull_ether_services',
        request_serializer=ether__service__pb2.req_ether_service_key.SerializeToString,
        response_deserializer=ether__service__pb2.res_ether_service.FromString,
        )


class ether_serviceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def rpc_get_ether_service(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_list_ether_services(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_register_ether_service(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_unregister_ether_service(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_taskflow_create_ether_service(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_taskflow_delete_ether_service(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_push_ether_services(self, request_iterator, context):
    """rpc for e3neta&e3netd interaction
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_pull_ether_services(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ether_serviceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'rpc_get_ether_service': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_get_ether_service,
          request_deserializer=ether__service__pb2.req_ether_service_key.FromString,
          response_serializer=ether__service__pb2.res_ether_service.SerializeToString,
      ),
      'rpc_list_ether_services': grpc.stream_stream_rpc_method_handler(
          servicer.rpc_list_ether_services,
          request_deserializer=ether__service__pb2.req_ether_service_key.FromString,
          response_serializer=ether__service__pb2.res_ether_service.SerializeToString,
      ),
      'rpc_register_ether_service': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_register_ether_service,
          request_deserializer=ether__service__pb2.res_ether_service.FromString,
          response_serializer=ether__service__pb2.res_ether_service.SerializeToString,
      ),
      'rpc_unregister_ether_service': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_unregister_ether_service,
          request_deserializer=ether__service__pb2.req_ether_service_key.FromString,
          response_serializer=common__pb2.null.SerializeToString,
      ),
      'rpc_taskflow_create_ether_service': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_taskflow_create_ether_service,
          request_deserializer=ether__service__pb2.req_service_create_spec.FromString,
          response_serializer=common__pb2.null.SerializeToString,
      ),
      'rpc_taskflow_delete_ether_service': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_taskflow_delete_ether_service,
          request_deserializer=ether__service__pb2.req_ether_service_key.FromString,
          response_serializer=common__pb2.null.SerializeToString,
      ),
      'rpc_push_ether_services': grpc.stream_unary_rpc_method_handler(
          servicer.rpc_push_ether_services,
          request_deserializer=ether__service__pb2.res_ether_service.FromString,
          response_serializer=common__pb2.null.SerializeToString,
      ),
      'rpc_pull_ether_services': grpc.unary_stream_rpc_method_handler(
          servicer.rpc_pull_ether_services,
          request_deserializer=ether__service__pb2.req_ether_service_key.FromString,
          response_serializer=ether__service__pb2.res_ether_service.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ether_service', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
