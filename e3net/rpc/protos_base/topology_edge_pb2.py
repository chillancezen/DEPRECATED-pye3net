# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: topology_edge.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_pb2 as common__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='topology_edge.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x13topology_edge.proto\x1a\x0c\x63ommon.proto\"<\n\x0creq_edge_key\x12\x10\n\x08per_uuid\x18\x01 \x01(\x08\x12\x1a\n\x12uuid_or_service_id\x18\x02 \x01(\t\"[\n\x11res_topology_edge\x12\n\n\x02id\x18\x01 \x01(\t\x12\x12\n\ninterface0\x18\x02 \x01(\t\x12\x12\n\ninterface1\x18\x03 \x01(\t\x12\x12\n\nservice_id\x18\x04 \x01(\t2\x91\x02\n\rtopology_edge\x12<\n\x15rpc_get_topology_edge\x12\r.req_edge_key\x1a\x12.res_topology_edge\"\x00\x12\x42\n\x17rpc_list_topology_edges\x12\r.req_edge_key\x1a\x12.res_topology_edge\"\x00(\x01\x30\x01\x12\x46\n\x1arpc_regsiter_topology_edge\x12\x12.res_topology_edge\x1a\x12.res_topology_edge\"\x00\x12\x36\n\x1crpc_unregister_topology_edge\x12\r.req_edge_key\x1a\x05.null\"\x00\x62\x06proto3')
  ,
  dependencies=[common__pb2.DESCRIPTOR,])




_REQ_EDGE_KEY = _descriptor.Descriptor(
  name='req_edge_key',
  full_name='req_edge_key',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='per_uuid', full_name='req_edge_key.per_uuid', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='uuid_or_service_id', full_name='req_edge_key.uuid_or_service_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=37,
  serialized_end=97,
)


_RES_TOPOLOGY_EDGE = _descriptor.Descriptor(
  name='res_topology_edge',
  full_name='res_topology_edge',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='res_topology_edge.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='interface0', full_name='res_topology_edge.interface0', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='interface1', full_name='res_topology_edge.interface1', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='service_id', full_name='res_topology_edge.service_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=99,
  serialized_end=190,
)

DESCRIPTOR.message_types_by_name['req_edge_key'] = _REQ_EDGE_KEY
DESCRIPTOR.message_types_by_name['res_topology_edge'] = _RES_TOPOLOGY_EDGE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

req_edge_key = _reflection.GeneratedProtocolMessageType('req_edge_key', (_message.Message,), dict(
  DESCRIPTOR = _REQ_EDGE_KEY,
  __module__ = 'topology_edge_pb2'
  # @@protoc_insertion_point(class_scope:req_edge_key)
  ))
_sym_db.RegisterMessage(req_edge_key)

res_topology_edge = _reflection.GeneratedProtocolMessageType('res_topology_edge', (_message.Message,), dict(
  DESCRIPTOR = _RES_TOPOLOGY_EDGE,
  __module__ = 'topology_edge_pb2'
  # @@protoc_insertion_point(class_scope:res_topology_edge)
  ))
_sym_db.RegisterMessage(res_topology_edge)



_TOPOLOGY_EDGE = _descriptor.ServiceDescriptor(
  name='topology_edge',
  full_name='topology_edge',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=193,
  serialized_end=466,
  methods=[
  _descriptor.MethodDescriptor(
    name='rpc_get_topology_edge',
    full_name='topology_edge.rpc_get_topology_edge',
    index=0,
    containing_service=None,
    input_type=_REQ_EDGE_KEY,
    output_type=_RES_TOPOLOGY_EDGE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='rpc_list_topology_edges',
    full_name='topology_edge.rpc_list_topology_edges',
    index=1,
    containing_service=None,
    input_type=_REQ_EDGE_KEY,
    output_type=_RES_TOPOLOGY_EDGE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='rpc_regsiter_topology_edge',
    full_name='topology_edge.rpc_regsiter_topology_edge',
    index=2,
    containing_service=None,
    input_type=_RES_TOPOLOGY_EDGE,
    output_type=_RES_TOPOLOGY_EDGE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='rpc_unregister_topology_edge',
    full_name='topology_edge.rpc_unregister_topology_edge',
    index=3,
    containing_service=None,
    input_type=_REQ_EDGE_KEY,
    output_type=common__pb2._NULL,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_TOPOLOGY_EDGE)

DESCRIPTOR.services_by_name['topology_edge'] = _TOPOLOGY_EDGE

# @@protoc_insertion_point(module_scope)
